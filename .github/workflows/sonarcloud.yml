name: Sonarcloud

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    # The CMake configure and build commands are platform-agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    strategy:
      fail-fast: false
      matrix:
        compiler: [clang]
        compiler-version: [15]
        warnings: [  "-Wall -Wextra -Werror " ]
        build-type: [Release]
    runs-on: ubuntu-22.04
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed


    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Install dependencies
      run:  sudo apt update && sudo apt-get install -y libicu-dev tzdata gcc-10 libzstd-dev libjemalloc-dev
    - name: Install boost Ubuntu 22.04
      run : sudo apt update && sudo apt install -y libboost-all-dev
    - name: Install gcc 11
      run : sudo add-apt-repository ppa:ubuntu-toolchain-r/test && sudo apt update && sudo apt install -y gcc-11 g++-11
      if :  matrix.compiler == 'gcc' && matrix.compiler-version == 11
    - name: Install gcc 12
      run : sudo add-apt-repository ppa:ubuntu-toolchain-r/test && sudo apt update && sudo apt install -y gcc-12 g++-12
      if :  matrix.compiler == 'gcc' && matrix.compiler-version == 12
    - name: Install clang 13
      run:  sudo apt install clang-13
      if :  matrix.compiler == 'clang' && matrix.compiler-version == 13
    # Currently not needed, because we are not building against libc++
    #- name: Install libc++-13
    #  run : sudo apt install -y libunwind-13-dev libc++abi-13-dev libc++-13-dev
    #  if:  matrix.compiler == 'clang13'
    - name: Install clang 14
      run : sudo apt install clang-14
      if :  matrix.compiler == 'clang' && matrix.compiler-version == 14
    - name: Install clang 15
      # The sed command fixes a bug in `llvm.sh` in combination with the latest version of
      # `apt-key`. Without it the GPG key for the llvm repository is downloaded but deleted
      # immediately after.
      run:  | 
        wget https://apt.llvm.org/llvm.sh
        sudo chmod +x llvm.sh
        sed   's/apt-key del/echo/' llvm.sh -iy
        sudo ./llvm.sh 15 all
        sudo apt install clang-15
      if :  matrix.compiler == 'clang' && matrix.compiler-version == 15

    - name: Python dependencies
      run: sudo apt-get install python3-yaml unzip pkg-config python3-icu

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -DCMAKE_TOOLCHAIN_FILE="$(pwd)/toolchains/${{matrix.compiler}}${{matrix.compiler-version}}.cmake" -DADDITIONAL_COMPILER_FLAGS="${{matrix.warnings}} ${{matrix.asan-flags}} ${{matrix.ubsan-flags}}" -DUSE_PARALLEL=true -DRUN_EXPENSIVE_TESTS=true
    - name: Install sonar-scanner and build-wrapper
      uses: SonarSource/sonarcloud-github-c-cpp@v1
    - name: Build
        # Build your program with the given configuration
      run: build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build ${{github.workspace}}/build --config ${{matrix.build-type}} --target ValueIdComparatorsTest -- -j $(nproc)
    - name: Run sonar-scanner
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"

