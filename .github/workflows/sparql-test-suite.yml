name: sparql-test-suite

on:
  push:
    branches: [ master ]

jobs:
  build:
    env:
          compiler: clang
          compiler-version: 16
          build-type: Release
          cmake-flags: "-DCMAKE_C_COMPILER=clang-16 -DCMAKE_CXX_COMPILER=clang++-16"

    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: "recursive"
        path: qlever-code
    - name: Checkout sparql-test-suite-files
      uses: actions/checkout@v3
      with:
        repository: "w3c/rdf-tests"
        path: sparql-test-suite
    - name: Checkout qlever-test-suite
      uses: actions/checkout@v3
      with:
        repository: "SIRDNARch/qlever-test-suite"
        token: ${{ secrets.REPO_ACCESS_TOKEN }}
        path: qlever-test-suite
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    - name: Install dependencies
      uses: ./qlever-code/.github/workflows/install-dependencies-ubuntu
    - name: Install compiler
      uses: ./qlever-code/.github/workflows/install-compiler-ubuntu
      with:
        compiler: "clang"
        compiler-version: "16"
    - name: Create build directory
      run: mkdir ${{github.workspace}}/qlever-code/build
    - name: Configure CMake
      run: cmake -S ${{github.workspace}}/qlever-code/ -B ${{github.workspace}}/qlever-code/build ${{env.cmake-flags}} -DCMAKE_BUILD_TYPE=${{env.build-type}} -DLOGLEVEL=INFO -DUSE_PARALLEL=false

    - name: Build
      run: cmake --build ${{github.workspace}}/qlever-code/build --config ${{env.build-type}} -- -j $(nproc)
    - name: Execute test suite
      run: |
          cd qlever-test-suite
          python testsuite.py config http://0.0.0.0 7001 ${{github.workspace}}/sparql-test-suite/sparql/sparql11/ ${{github.workspace}}/qlever-code/build ${{github.workspace}}/qlever-test-suite/listOfTests.csv
          python testsuite.py extract
          python testsuite.py ${{ github.sha }}
          cd ..
    - name: Commit to test-web
      run: |
        git config --global user.email "andrisrico@gmail.com"
        git config --global user.name "SIRDNARch"
        git clone https://x-access-token:${{ secrets.REPO_ACCESS_TOKEN }}@github.com/SIRDNARch/test-web
        cd test-web
        cp ../qlever-test-suite/results/${{ github.sha }}.json ./results/
        git add .
        git commit -m "Add ${{ github.sha }}"
        git push
